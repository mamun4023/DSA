

function Merge(arr, low, mid, high){
	let index_l, index_r, index_a;
	let size_l = mid - low + 1;
	let size_r = high - mid;
	let L = new Array(size_l);
	let R = new Array(size_r);


	// copy elemnt into left array
	for(let i = 0; i<size_l; i++){
		L[i] = arr[low + i];
	}

	// copy element into right arry
	for(let j = 0; j<size_r; j++){
		R[j] = arr[mid+1+j]
	}

  	index_l = 0;
	index_r = 0;
	index_a = low;


	while(index_l < size_l && index_r < size_r){
		if(L[index_l] <= R[index_r]){
			arr[index_a] = L[index_l];
			index_l++;
		}else{
			arr[index_a] = R[index_r];
			index_r++;
		}
		index_a++;
	}

	// copy remain left array element
	while(index_l < size_l){
		arr[index_a] = L[index_l];
		index_l++;
		index_a++;
	}

	// copy remain right array element

	while(index_r < size_r){
		arr[index_a] = R[index_r];
		index_r++;
		index_a++;
	}
}



function MergeSort(arr, low, high){

	if(low < high) {
	let mid = Math.floor( low + (high - low)/2);
    MergeSort(arr, low, mid);
    MergeSort(arr, mid+1, high);
    Merge(arr, low, mid, high);

}
}


let arr = [10,20,30,4,33,0,20,2];
MergeSort(arr, 0, arr.length-1)
console.log(arr);
