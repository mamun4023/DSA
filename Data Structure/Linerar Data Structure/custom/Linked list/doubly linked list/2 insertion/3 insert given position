
	class Node{
		constructor(data){
			this.prev = null;
			this.data = data;
			this.next = null;
		}
	}

	class Linked_list{
		constructor(){
			this.head = this.tail = null;
		}

		// insert at last in O(1) time
		insert(data){
			let newNode = new Node(data);
			if(this.head == null){
				this.head = this.tail = newNode;
			}else{
				this.tail.next = newNode;
				newNode.prev = this.tail;
				this.tail = newNode;
			}
		}

		insertAt(pos, data){
			let newNode = new Node(data);
			let traverse = this.head;
			for(let i = 1; i<pos-1 ; i++){
				traverse = traverse.next;
			}
			let after = traverse.next;
			traverse.next = newNode;
			newNode.prev = traverse;
			newNode.next = after;
			after.prev = newNode;

		}

		display(){
			let traverse = this.head;
			while(traverse){
				document.write(traverse.data + " " )
				traverse = traverse.next;
			}
		}
	}

	let obj = new Linked_list();
	obj.insert(10);
	obj.insert(30);
	obj.insert(40);   
	obj.insert(20);
	obj.insertAt(2,100);   // 2 to 3
	obj.display();

