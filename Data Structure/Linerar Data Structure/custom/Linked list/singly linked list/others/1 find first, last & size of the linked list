
// node structure
class Node{
  constructor(element){
    this.element = element;
    this.next = null;
  }
}


class Linked_list{
  constructor(){
    this.head = null;
  }

// add element at last
add(element){
  var node = new Node(element);
  if(this.head == null){
    this.head = node;
    
  }else{
    let traverse = this.head;
    while(traverse.next){
      traverse = traverse.next;
    }
    traverse.next = node;
  }
}

 // size method
 size(){
  let size = 0;
  let traverse = this.head;
  while(traverse){
    size++
    traverse = traverse.next;
  }
  return size;
 }

// get first element
 getFirst(){
  return this.head
 }

 // get last element
 getLast(){
  let lastNode = this.head;
     while(lastNode.next){
      lastNode = lastNode.next;
     }
     return lastNode
   }

  // display the node
   display(){
    let traverse = this.head;
    while(traverse){
      document.write(traverse.element+ " ");
      traverse = traverse.next;
    }
   }
}


var obj = new Linked_list();
obj.add(50);
obj.add(20);
obj.add(30);
obj.add(60);
console.log(obj.getFirst().element)
console.log(obj.getLast())
obj.display();
