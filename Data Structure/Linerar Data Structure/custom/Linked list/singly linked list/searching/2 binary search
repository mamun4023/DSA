function middleNode(start, last)
{
    if (start == null)
        return null;
    var slow = start;
    var fast = start.next;
    while (fast != last)
    {
        fast = fast.next;
        if (fast != last)
        {
            slow = slow.next;
            fast = fast.next;
        }
    }
    return slow;
}
// function to insert a node at the beginning
// of the Singly Linked List
function binarySearch(head, value)
{
    var start = head;
    var last = null;
    do
    {
        // Find Middle
        var mid = middleNode(start, last);
        // If middle is empty
        if (mid == null)
            return null;
        // If value is present at middle
        if (mid.data == value)
            return mid;
        // If value is less than mid
        else if (mid.data > value)
        {
            start = mid.next;
        }
        // If the value is more than mid.
        else
            last = mid;
    } while (last == null || last != start);
    // value not present
    return null;
}
 
