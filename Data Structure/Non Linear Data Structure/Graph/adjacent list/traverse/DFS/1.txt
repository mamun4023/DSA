class Edge{
	constructor(src, dest){
		this.src = src;
		this.dest = dest;
	}
}

class Graph{
	 constructor(){
	 	this.adjList = new Map();
	 }

	Insert(edge){
		const {src, dest} = edge;

		if(this.adjList.has(src)){
			this.adjList.get(src).push(dest)
		}else{
			this.adjList.set(src, [dest])
		}
	}

	until(node, visited){
		visited[node] = true;
		document.write(node, " ");
		let neigbors = this.adjList.get(node);
		for(let i in neigbors){
			let neigh = neigbors[i];
			if(!visited[neigh]){
				this.until(neigh, visited)
			}
		}
	}

	DFS(startNode){
		let visited = {};
		this.until(startNode, visited);
	}


	Print(){
		let vertics = this.adjList.keys();
		console.log(vertics)
	}
}


let obj = new Graph();
obj.Insert(new Edge('A', 'B'));
obj.Insert(new Edge('A', 'C'));
obj.Insert(new Edge('B', 'D'));
obj.Insert(new Edge('C', 'E'));


obj.Print();
obj.DFS('A')
