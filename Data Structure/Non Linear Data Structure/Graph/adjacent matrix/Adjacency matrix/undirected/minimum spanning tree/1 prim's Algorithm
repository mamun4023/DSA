<script type="text/javascript">
	
let V = 5;


function printMST(parent, graph)
{
    document.write("Edge      Weight" + "<br>");
    for (let i = 1; i < V; i++)
        document.write(parent[i] + "   -  " + i + "     " + graph[i][parent[i]] + "<br>");
}

function minDist(dist, mstSet){
	let min = Number.MAX_VALUE;
	let min_index = -1;

	for(let v = 0; v<V; v++){
		if(mstSet[v] == false && dist[v] <= min){
			min = dist[v];
			min_index = v;
		}
	}
	return min_index;
}


function primMST(graph, startVertex){
	let parent = [];
	let dist = [];
	let mstSet = [];

	for(let i = 0; i<V; i++){
		dist[i] = Number.MAX_VALUE;
		mstSet[i] = false;
	}

	dist[startVertex]= 0;

	for(let count = 0; count < V -1; count++){
		let u = minDist(dist, mstSet);
		mstSet[u] = true;

		for(let v = 0; v<V; v++){
			if(graph[u][v] && mstSet[v] == false && graph[u][v] <= dist[v]){
				parent[v] = u;
				dist[v] = graph[u][v];
			}
		}

	}
	printMST(parent, graph)
}

let graph = [ 
				[ 0, 2, 0, 6, 0 ],
				[ 2, 0, 3, 8, 5 ],
				[ 0, 3, 0, 0, 7 ],
				[ 6, 8, 0, 0, 9 ],
				[ 0, 5, 7, 9, 0 ] 
			];
 
// Print the solution
primMST(graph, 0);


//https://www.geeksforgeeks.org/prims-minimum-spanning-tree-mst-greedy-algo-5/


</script>
