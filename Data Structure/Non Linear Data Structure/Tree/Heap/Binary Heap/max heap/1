
<script type="text/javascript">
	

function BinaryHeap(){
	let list = [];

	//heapify 
	this.maxHeapify = (arr, n, i) => {
		let largest = i;
		let l = 2 * i + 1; 
		let r = 2 * i + 2;


		// if left child is big
		if(l < n && arr[l] > arr[largest]){
			largest = l;
		}

		// if right child is big
		if(r < n && arr[r] > arr[largest]){
			largest = r;
		}

		//if big is not root
		if(largest != i){
			let temp = arr[i];
			arr[i] = arr[largest];
			arr[largest] = temp;

			// heapify 
			this.maxHeapify(arr, n, largest)
		}
	}

	// insert value
	this.insert = (num) => {
		const size = list.length;

		if(size === 0){
			list.push(num)
		}else{
			list.push(num)

			// Heapify
			for(let i = parseInt(list.length /2 - 1); i>= 0; i--){
				this.maxHeapify(list, list.length, i)
			}
		}
	}

	// return head
	this.getList = ()=> list;
}

const heap = new BinaryHeap();
heap.insert(3);
heap.insert(4);
heap.insert(9);
heap.insert(5);
heap.insert(2);
heap.insert(0);
heap.insert(10);
console.log(heap.getList());


</script>
