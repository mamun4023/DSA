const TriesNode = function (key) {
  this.key = key;
  this.parent = null;
  this.children = {};
  this.end = false;
  this.getWord = function () {
    let output = [];
    let node = this;

    while (node != null) {
      output.unshift(node.key);
      node = node.parent;
    }

    return output.join("");
  };
};

const Tries = function () {
  this.root = new TriesNode(null);

  this.insert = function (word) {
    let node = this.root;
    for (let char of word) {
      if (!node.children[char]) {
        node.children[char] = new TriesNode(char);
        node.children[char].parent = node;
      }
      node = node.children[char];
    }

    node.end = true;
  };

  this.search = function (word) {
    let node = this.root;

    for (let char of word) {
      if (!node.children[char]) {
        return false;
      }
      node = node.children[char];
    }

    return node.end;
  };

  this.find = function (prefix) {
    let node = this.root;
    let output = [];

    for (let char of prefix) {
      if (!node.children[char]) {
        return output;
      }
      node = node.children[char];
    }

    this.findAllWords(node, output);

    return output;
  };

  this.findAllWords = function (node, arr) {
    if (node.end) {
      arr.unshift(node.getWord());
    }

    for (let child in node.children) {
      this.findAllWords(node.children[child], arr);
    }
  };
};

const obj = new Tries();
obj.insert("hello");
obj.insert("halling");
obj.insert("world");
console.log(obj.search("hell"));
console.log(obj.find("h"));
